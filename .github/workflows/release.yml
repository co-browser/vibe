
name: Release

on:
  push:
    branches: [main]

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write
  packages: write
  attestations: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  # Run CI validation first
  validate:
    name: Validate Build
    uses: ./.github/workflows/ci.yml
    secrets: inherit

  # Create the release
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: validate
    outputs:
      released: ${{ steps.semantic-release.outputs.new_release_published }}
      version: ${{ steps.semantic-release.outputs.new_release_version }}
      notes: ${{ steps.semantic-release.outputs.new_release_notes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.1.4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Semantic Release
        id: semantic-release
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 24
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Notify Discord on successful release
  notify:
    name: Discord Notification
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.released == 'true'
    steps:
      - name: Send Discord Notification
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          args: |
            ðŸš€ **New Release: v${{ needs.release.outputs.version }}**
            
            Repository: **${{ github.repository }}**
            Release Notes: ${{ github.server_url }}/${{ github.repository }}/releases/tag/v${{ needs.release.outputs.version }}
            
            ${{ needs.release.outputs.notes }}
